// import PropTypes from 'prop-types'
// import { capitalize } from '../../utils/capitalize.js'
//
// const Select = ({
//   selectedCategory,
//   setSelectedCategory,
//   className,
//   id,
//   name,
//   options,
// }) => {
//   return (
//     <select
//       name={name}
//       id={id}
//       className={className}
//       onChange={(e) => setSelectedCategory(e.target.value)}
//       value={selectedCategory}
//     >
//       {options.map((option) => (
//         <option key={option.value} value={option.value}>
//           {capitalize(option.value)}
//         </option>
//       ))}
//     </select>
//   )
// }
//
// Select.propTypes = {
//   options: PropTypes.array,
//   id: PropTypes.string,
//   name: PropTypes.string,
//   className: PropTypes.string,
//   selectedCategory: PropTypes.string.isRequired,
//   setSelectedCategory: PropTypes.func.isRequired,
// }
//
// export default Select

import PropTypes from 'prop-types'
import { capitalize } from '../../utils/capitalize.js'
import { useDispatch } from 'react-redux'
import { setSelectedCategory } from '../../store/adminSlice.js' // Імпортуємо Redux-действие

const Select = ({ selectedCategory, className, id, name, options }) => {
  const dispatch = useDispatch() // Використовуємо dispatch для виклику дій

  const handleCategoryChange = (e) => {
    dispatch(setSelectedCategory(e.target.value)) // Викликаємо dispatch для зміни категорії
  }

  return (
    <select
      name={name}
      id={id}
      className={className}
      onChange={handleCategoryChange} // Використовуємо handleCategoryChange
      value={selectedCategory}
    >
      {options.map((option) => (
        <option key={option.value} value={option.value}>
          {capitalize(option.value)}
        </option>
      ))}
    </select>
  )
}

Select.propTypes = {
  options: PropTypes.array.isRequired,
  id: PropTypes.string,
  name: PropTypes.string,
  className: PropTypes.string,
  selectedCategory: PropTypes.string.isRequired,
}

export default Select
